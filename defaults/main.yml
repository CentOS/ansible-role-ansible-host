# Default variables for ansible-host role
# As the ansible mgmt host can also use various inventories, etc
# We'll define multiple paths where to checkout and which keys to use

# Ansible version for CentOS we want on the mgmt station
# Worth knowing that on 8-stream, ansible-core is in distro, so repo is just used 
# to fetch other pkgs, like ara, but not ansible-core engine itself
ansible_repo_pkg: centos-release-ansible-29

# By default we'll check out mitogen plugin, but we can enable it per ansible config
mitogen_scm_url: https://github.com/mitogen-hq/mitogen.git
mitogen_tag: v0.3.2

# Do we need to patch mitogen (patches before new release)
mitogen_needs_patches: False
mitogen_patch_list:
  - mitogen-patch-545.patch

# Real ansible host configurations (multiple are possible)
ansible_configs:
  - name: my_inventory
    base_path: /srv/ansible/my_inventory
    use_mitogen: True
    forks: 50
    owner: automationbot
    homedir: /home/automationbot
    credstore: /home/automationbot/credstore
    env: staging    
    log_to_disk: True # will log to /var/log/ansible/my_inventory
    ssh_host_key_check: True # False if we want blindly to accept ssh connections to such inventory
    ssh_priv_key: id_rsa # Private key (passphrase protected !) to import on ansible-host, if defined
    vault_file:          # if defined , it will reference the file containing vault pass, see below (optional)
    vault_password:     # string to be copied to a vault_file (see above) to unlock automatically
    cron: True # If we want to have ping/refresh facts and also play all roles at regular interval
    cron_refresh_minute: "*/25"
    cron_refresh_hour: "*"
    cron_roles_play_minute: "1"
    cron_roles_play_hour: "*"
    scm_repos:
      - name: playbooks
        url: https://github.com/CentOS/ansible-infra-playbooks.git
        git_crypted: False
      - name: inventory
        url: user@url:path/to/inventory.git
        git_crypted: True
        git_crypt_key: mykey
      - name: pkistore
        url: user@url:path/to/pkistore.git 
        git_crypted: True
        git_crypt_key: other.key
      - name: filestore
        url: https://apikey@url/path/to/filestore.git
        git_crypted: True
        git_crypt_key: filestore.key

# ansible ssh
ansible_ssh_ControlPersist: 30m
ansible_ssh_ServerAliveInterval: '20'

# Reporting
# Do we want ARA installed locally
# If so do we want container version or rpm version for ara-api server
ansible_use_ara: True
ansible_ara_container: False
ansible_ara_pkg: True

# Which container to pull in case of ansible_ara_container: True
# Client part is already packaged for .el8
ansible_ara_container_image: 'quay.io/recordsansible/ara-api:centos8-pypi-latest'

# common settings for ara/gunicorn
ansible_ara_server_port: 8000
ansible_ara_workers: 4

# Number of days to keep in local ARA database (pruning every day with that value)
ansible_ara_prune_days: 7
# Number of ara records to process per call
ansible_ara_prune_limit: 2000
